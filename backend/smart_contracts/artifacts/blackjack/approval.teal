#pragma version 8
intcblock 0 1 2 5 5000
bytecblock 0x7374617465 0x706c617965725f6d61785f746f74616c 0x6e6f6e6365 0x62616e6b 0x62616e6b5f6d61785f746f74616c 0x6173736574 0x616374696f6e5f74696d6572 0x 0x77696e6e6572 0x62616e6b5f6361726473 0x72657175657374 0x068101 0x706c617965725f6361726473 0x6361726473 0x63617264735f6c656674 0x7374616b65 0x706c617965725f6d696e5f746f74616c 0x62616e6b5f6d696e5f746f74616c 0x6665655f686f6c646572 0x6665655f616d6f756e74 0x617070
txna ApplicationArgs 0
pushbytes 0xcd336c85 // "create(asset,account,account)void"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0xe2ef83c2 // "opt_in(axfer,uint64)void"
==
bnz main_l23
txna ApplicationArgs 0
pushbytes 0xb68f7616 // "init(pay,asset)void"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x7be19af0 // "distribute_req(byte[])void"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0x51cb0abb // "distribute_act(byte[])void"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x7c7965f7 // "hit_req(byte[])void"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0xb3b2fbb2 // "hit_act(byte[])void"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x71338e45 // "stand_req(byte[])void"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0xdd11cd99 // "stand_act(byte[])void"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x5caaea29 // "forfeit()void"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x377b98ce // "delete(asset,account,account)void"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x02bece11 // "hello(string)string"
==
bnz main_l13
err
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub hellocaster_33
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_3 // DeleteApplication
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub deletecaster_32
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub forfeitcaster_31
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub standactcaster_30
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub standreqcaster_29
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub hitactcaster_28
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub hitreqcaster_27
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub distributeactcaster_26
intc_1 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub distributereqcaster_25
intc_1 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initcaster_24
intc_1 // 1
return
main_l23:
txn OnCompletion
intc_1 // OptIn
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optincaster_23
intc_1 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
callsub createcaster_22
intc_1 // 1
return

// create
create_0:
proto 3 0
bytec 5 // "asset"
frame_dig -3
txnas Assets
app_global_put
bytec_3 // "bank"
frame_dig -2
txnas Accounts
app_global_put
bytec 18 // "fee_holder"
frame_dig -1
txnas Accounts
app_global_put
bytec 13 // "cards"
pushbytes 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 // 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
app_global_put
bytec 14 // "cards_left"
pushint 52 // 52
app_global_put
bytec_2 // "nonce"
intc_0 // 0
app_global_put
bytec_0 // "state"
intc_0 // 0
app_global_put
retsub

// opt_in
optin_1:
proto 2 0
bytec_0 // "state"
app_global_get
intc_1 // 1
==
bnz optin_1_l4
bytec_0 // "state"
app_global_get
intc_2 // 2
==
bnz optin_1_l3
err
optin_1_l3:
bytec_0 // "state"
app_global_get
intc_2 // 2
==
assert
txn Sender
bytec_3 // "bank"
app_global_get
==
assert
frame_dig -2
gtxns XferAsset
bytec 5 // "asset"
app_global_get
==
assert
frame_dig -2
gtxns AssetReceiver
global CurrentApplicationAddress
==
assert
frame_dig -2
gtxns AssetAmount
bytec 15 // "stake"
app_global_get
==
assert
bytec 19 // "fee_amount"
frame_dig -1
app_global_put
bytec_0 // "state"
pushint 3 // 3
app_global_put
bytec 6 // "action_timer"
global Round
app_global_put
b optin_1_l5
optin_1_l4:
bytec_0 // "state"
app_global_get
intc_1 // 1
==
assert
txn Sender
global CreatorAddress
==
assert
frame_dig -2
gtxns XferAsset
bytec 5 // "asset"
app_global_get
==
assert
frame_dig -2
gtxns AssetReceiver
global CurrentApplicationAddress
==
assert
bytec 15 // "stake"
frame_dig -2
gtxns AssetAmount
app_global_put
bytec 19 // "fee_amount"
frame_dig -1
app_global_put
bytec_0 // "state"
intc_2 // 2
app_global_put
optin_1_l5:
retsub

// init
init_2:
proto 2 0
bytec_0 // "state"
app_global_get
intc_0 // 0
==
assert
txn Sender
global CreatorAddress
==
assert
frame_dig -2
gtxns Amount
pushint 1000000 // 1000000
==
assert
frame_dig -1
txnas Assets
bytec 5 // "asset"
app_global_get
==
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field AssetReceiver
bytec 5 // "asset"
app_global_get
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
itxn_submit
bytec_0 // "state"
intc_1 // 1
app_global_put
retsub

// pop_card
popcard_3:
proto 2 1
intc_0 // 0
store 4
intc_0 // 0
store 5
popcard_3_l1:
load 5
frame_dig -2
<=
bz popcard_3_l5
bytec 13 // "cards"
app_global_get
load 4
getbyte
intc_0 // 0
==
bnz popcard_3_l4
popcard_3_l3:
load 4
intc_1 // 1
+
store 4
b popcard_3_l1
popcard_3_l4:
load 5
intc_1 // 1
+
store 5
b popcard_3_l3
popcard_3_l5:
load 4
intc_1 // 1
-
store 4
bytec 13 // "cards"
bytec 13 // "cards"
app_global_get
load 4
frame_dig -1
setbyte
app_global_put
bytec 14 // "cards_left"
bytec 14 // "cards_left"
app_global_get
intc_1 // 1
-
app_global_put
pushbytes 0x6c6173745f63617264 // "last_card"
load 4
app_global_put
load 4
retsub

// card_value
cardvalue_4:
proto 1 1
frame_dig -1
pushint 13 // 13
%
intc_1 // 1
+
pushint 10 // 10
dup2
>
select
retsub

// sig_to_card_pos
sigtocardpos_5:
proto 1 1
frame_dig -1
extract 2 0
bytec 14 // "cards_left"
app_global_get
itob
extract 7 1
b%
btoi
retsub

// give_card_to_player
givecardtoplayer_6:
proto 1 0
frame_dig -1
intc_1 // 1
callsub popcard_3
store 1
bytec 12 // "player_cards"
bytec 12 // "player_cards"
app_global_get
intc_1 // 1
+
app_global_put
load 1
callsub cardvalue_4
store 2
load 2
intc_1 // 1
==
bnz givecardtoplayer_6_l2
load 2
b givecardtoplayer_6_l3
givecardtoplayer_6_l2:
pushint 11 // 11
givecardtoplayer_6_l3:
store 3
bytec 16 // "player_min_total"
bytec 16 // "player_min_total"
app_global_get
load 2
+
app_global_put
bytec_1 // "player_max_total"
bytec_1 // "player_max_total"
app_global_get
load 3
+
app_global_put
retsub

// give_card_to_bank
givecardtobank_7:
proto 1 0
frame_dig -1
intc_2 // 2
callsub popcard_3
store 6
bytec 9 // "bank_cards"
bytec 9 // "bank_cards"
app_global_get
intc_1 // 1
+
app_global_put
load 6
callsub cardvalue_4
store 7
load 7
intc_1 // 1
==
bnz givecardtobank_7_l2
load 7
b givecardtobank_7_l3
givecardtobank_7_l2:
pushint 11 // 11
givecardtobank_7_l3:
store 8
bytec 17 // "bank_min_total"
bytec 17 // "bank_min_total"
app_global_get
load 7
+
app_global_put
bytec 4 // "bank_max_total"
bytec 4 // "bank_max_total"
app_global_get
load 8
+
app_global_put
retsub

// distribute_req
distributereq_8:
proto 1 0
bytec_0 // "state"
app_global_get
pushint 3 // 3
==
assert
txn Sender
global CreatorAddress
==
assert
frame_dig -1
extract 2 0
bytec_2 // "nonce"
json_ref JSONUint64
bytec_2 // "nonce"
app_global_get
==
assert
frame_dig -1
extract 2 0
bytec 20 // "app"
json_ref JSONUint64
global CurrentApplicationID
==
assert
bytec 10 // "request"
frame_dig -1
extract 2 0
app_global_put
bytec_2 // "nonce"
bytec_2 // "nonce"
app_global_get
intc_1 // 1
+
app_global_put
bytec_0 // "state"
pushint 4 // 4
app_global_put
bytec 6 // "action_timer"
global Round
app_global_put
retsub

// distribute_act
distributeact_9:
proto 1 0
intc_0 // 0
store 0
distributeact_9_l1:
load 0
intc 4 // 5000
global MinTxnFee
/
<
bnz distributeact_9_l10
bytec_0 // "state"
app_global_get
pushint 4 // 4
==
assert
bytec 10 // "request"
app_global_get
frame_dig -1
extract 2 0
bytec_3 // "bank"
app_global_get
ed25519verify
assert
bytec 12 // "player_cards"
app_global_get
intc_2 // 2
<
bnz distributeact_9_l9
frame_dig -1
callsub sigtocardpos_5
callsub givecardtobank_7
distributeact_9_l4:
bytec 9 // "bank_cards"
app_global_get
intc_1 // 1
==
bytec_1 // "player_max_total"
app_global_get
pushint 21 // 21
==
&&
bnz distributeact_9_l8
bytec 9 // "bank_cards"
app_global_get
intc_1 // 1
==
bytec_1 // "player_max_total"
app_global_get
pushint 21 // 21
!=
&&
bnz distributeact_9_l7
bytec_0 // "state"
pushint 3 // 3
app_global_put
b distributeact_9_l11
distributeact_9_l7:
bytec_0 // "state"
intc_3 // 5
app_global_put
b distributeact_9_l11
distributeact_9_l8:
bytec_0 // "state"
pushint 7 // 7
app_global_put
b distributeact_9_l11
distributeact_9_l9:
frame_dig -1
callsub sigtocardpos_5
callsub givecardtoplayer_6
b distributeact_9_l4
distributeact_9_l10:
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_3 // DeleteApplication
itxn_field OnCompletion
bytec 11 // 0x068101
itxn_field ApprovalProgram
bytec 11 // 0x068101
itxn_field ClearStateProgram
itxn_submit
load 0
intc_1 // 1
+
store 0
b distributeact_9_l1
distributeact_9_l11:
bytec 6 // "action_timer"
global Round
app_global_put
retsub

// hit_req
hitreq_10:
proto 1 0
bytec_0 // "state"
app_global_get
intc_3 // 5
==
assert
txn Sender
global CreatorAddress
==
assert
frame_dig -1
extract 2 0
bytec_2 // "nonce"
json_ref JSONUint64
bytec_2 // "nonce"
app_global_get
==
assert
frame_dig -1
extract 2 0
bytec 20 // "app"
json_ref JSONUint64
global CurrentApplicationID
==
assert
bytec 10 // "request"
frame_dig -1
extract 2 0
app_global_put
bytec_2 // "nonce"
bytec_2 // "nonce"
app_global_get
intc_1 // 1
+
app_global_put
bytec_0 // "state"
pushint 6 // 6
app_global_put
bytec 6 // "action_timer"
global Round
app_global_put
retsub

// hit_act
hitact_11:
proto 1 0
intc_0 // 0
store 9
hitact_11_l1:
load 9
intc 4 // 5000
global MinTxnFee
/
<
bnz hitact_11_l9
bytec_0 // "state"
app_global_get
pushint 6 // 6
==
assert
bytec 10 // "request"
app_global_get
frame_dig -1
extract 2 0
bytec_3 // "bank"
app_global_get
ed25519verify
assert
frame_dig -1
callsub sigtocardpos_5
callsub givecardtoplayer_6
bytec_1 // "player_max_total"
app_global_get
pushint 21 // 21
>
bytec_1 // "player_max_total"
app_global_get
bytec 16 // "player_min_total"
app_global_get
==
&&
bnz hitact_11_l8
bytec_1 // "player_max_total"
app_global_get
pushint 21 // 21
>
bytec_1 // "player_max_total"
app_global_get
bytec 16 // "player_min_total"
app_global_get
!=
&&
bnz hitact_11_l7
bytec_1 // "player_max_total"
app_global_get
pushint 21 // 21
==
bnz hitact_11_l6
bytec_0 // "state"
intc_3 // 5
app_global_put
b hitact_11_l10
hitact_11_l6:
bytec_0 // "state"
pushint 7 // 7
app_global_put
b hitact_11_l10
hitact_11_l7:
bytec_0 // "state"
intc_3 // 5
app_global_put
bytec_1 // "player_max_total"
bytec_1 // "player_max_total"
app_global_get
pushint 10 // 10
-
app_global_put
b hitact_11_l10
hitact_11_l8:
bytec_0 // "state"
pushint 9 // 9
app_global_put
bytec 8 // "winner"
bytec_3 // "bank"
app_global_get
app_global_put
b hitact_11_l10
hitact_11_l9:
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_3 // DeleteApplication
itxn_field OnCompletion
bytec 11 // 0x068101
itxn_field ApprovalProgram
bytec 11 // 0x068101
itxn_field ClearStateProgram
itxn_submit
load 9
intc_1 // 1
+
store 9
b hitact_11_l1
hitact_11_l10:
bytec 6 // "action_timer"
global Round
app_global_put
retsub

// stand_req
standreq_12:
proto 1 0
bytec_0 // "state"
app_global_get
intc_3 // 5
==
bytec_0 // "state"
app_global_get
pushint 7 // 7
==
||
assert
txn Sender
global CreatorAddress
==
assert
frame_dig -1
extract 2 0
bytec_2 // "nonce"
json_ref JSONUint64
bytec_2 // "nonce"
app_global_get
==
assert
frame_dig -1
extract 2 0
bytec 20 // "app"
json_ref JSONUint64
global CurrentApplicationID
==
assert
bytec 10 // "request"
frame_dig -1
extract 2 0
app_global_put
bytec_2 // "nonce"
bytec_2 // "nonce"
app_global_get
intc_1 // 1
+
app_global_put
bytec_0 // "state"
pushint 8 // 8
app_global_put
bytec 6 // "action_timer"
global Round
app_global_put
retsub

// stand_act
standact_13:
proto 1 0
intc_0 // 0
store 10
standact_13_l1:
load 10
intc 4 // 5000
global MinTxnFee
/
<
bnz standact_13_l17
bytec_0 // "state"
app_global_get
pushint 8 // 8
==
assert
bytec 10 // "request"
app_global_get
frame_dig -1
extract 2 0
bytec_3 // "bank"
app_global_get
ed25519verify
assert
frame_dig -1
callsub sigtocardpos_5
callsub givecardtobank_7
bytec 4 // "bank_max_total"
app_global_get
pushint 21 // 21
>
bytec 4 // "bank_max_total"
app_global_get
bytec 17 // "bank_min_total"
app_global_get
==
&&
bnz standact_13_l16
bytec 4 // "bank_max_total"
app_global_get
pushint 21 // 21
>
bytec 4 // "bank_max_total"
app_global_get
bytec 17 // "bank_min_total"
app_global_get
!=
&&
bnz standact_13_l15
bytec 4 // "bank_max_total"
app_global_get
pushint 17 // 17
>=
bnz standact_13_l6
bytec_0 // "state"
pushint 7 // 7
app_global_put
b standact_13_l18
standact_13_l6:
bytec 4 // "bank_max_total"
app_global_get
bytec_1 // "player_max_total"
app_global_get
>
bnz standact_13_l14
bytec 4 // "bank_max_total"
app_global_get
bytec_1 // "player_max_total"
app_global_get
<
bnz standact_13_l13
bytec_1 // "player_max_total"
app_global_get
pushint 21 // 21
==
bytec 12 // "player_cards"
app_global_get
intc_2 // 2
==
&&
bytec 9 // "bank_cards"
app_global_get
intc_2 // 2
!=
&&
bnz standact_13_l12
bytec_1 // "player_max_total"
app_global_get
pushint 21 // 21
==
bytec 12 // "player_cards"
app_global_get
intc_2 // 2
!=
&&
bytec 9 // "bank_cards"
app_global_get
intc_2 // 2
==
&&
bnz standact_13_l11
callsub push_16
b standact_13_l18
standact_13_l11:
callsub winbank_14
b standact_13_l18
standact_13_l12:
callsub winplayer_15
b standact_13_l18
standact_13_l13:
callsub winplayer_15
b standact_13_l18
standact_13_l14:
callsub winbank_14
b standact_13_l18
standact_13_l15:
bytec_0 // "state"
pushint 7 // 7
app_global_put
bytec 4 // "bank_max_total"
bytec 4 // "bank_max_total"
app_global_get
pushint 10 // 10
-
app_global_put
b standact_13_l18
standact_13_l16:
bytec_0 // "state"
pushint 9 // 9
app_global_put
bytec 8 // "winner"
global CreatorAddress
app_global_put
b standact_13_l18
standact_13_l17:
itxn_begin
pushint 6 // appl
itxn_field TypeEnum
intc_3 // DeleteApplication
itxn_field OnCompletion
bytec 11 // 0x068101
itxn_field ApprovalProgram
bytec 11 // 0x068101
itxn_field ClearStateProgram
itxn_submit
load 10
intc_1 // 1
+
store 10
b standact_13_l1
standact_13_l18:
bytec 6 // "action_timer"
global Round
app_global_put
retsub

// win_bank
winbank_14:
proto 0 0
bytec_0 // "state"
pushint 9 // 9
app_global_put
bytec 8 // "winner"
bytec_3 // "bank"
app_global_get
app_global_put
retsub

// win_player
winplayer_15:
proto 0 0
bytec_0 // "state"
pushint 9 // 9
app_global_put
bytec 8 // "winner"
global CreatorAddress
app_global_put
retsub

// push
push_16:
proto 0 0
bytec_0 // "state"
pushint 10 // 10
app_global_put
retsub

// forfeit
forfeit_17:
proto 0 0
bytec_0 // "state"
app_global_get
intc_3 // 5
==
bytec_0 // "state"
app_global_get
pushint 7 // 7
==
||
txn Sender
bytec_3 // "bank"
app_global_get
==
&&
bytec_0 // "state"
app_global_get
pushint 6 // 6
==
bytec_0 // "state"
app_global_get
pushint 8 // 8
==
||
txn Sender
global CreatorAddress
==
&&
||
bytec 6 // "action_timer"
app_global_get
pushint 10 // 10
+
global Round
<=
||
assert
bytec_0 // "state"
pushint 9 // 9
app_global_put
bytec 8 // "winner"
txn Sender
app_global_put
retsub

// delete
delete_18:
proto 3 0
frame_dig -3
txnas Assets
bytec 5 // "asset"
app_global_get
==
assert
txn Sender
global CreatorAddress
==
bnz delete_18_l11
frame_dig -2
txnas Accounts
global CreatorAddress
==
delete_18_l2:
assert
frame_dig -1
txnas Accounts
bytec 18 // "fee_holder"
app_global_get
==
assert
bytec_0 // "state"
app_global_get
pushint 9 // 9
==
bnz delete_18_l8
bytec_0 // "state"
app_global_get
intc_2 // 2
==
bnz delete_18_l7
bytec_0 // "state"
app_global_get
pushint 10 // 10
==
bnz delete_18_l6
err
delete_18_l6:
callsub givefundsback_19
b delete_18_l12
delete_18_l7:
txn Sender
global CreatorAddress
==
assert
bytec_0 // "state"
app_global_get
intc_2 // 2
==
assert
intc_0 // 0
callsub givefundscaller_20
b delete_18_l12
delete_18_l8:
bytec 8 // "winner"
app_global_get
txn Sender
==
assert
bytec 8 // "winner"
app_global_get
bytec_3 // "bank"
app_global_get
==
bnz delete_18_l10
intc_1 // 1
callsub givefundscaller_20
b delete_18_l12
delete_18_l10:
intc_0 // 0
callsub givefundscaller_20
b delete_18_l12
delete_18_l11:
frame_dig -2
txnas Accounts
bytec_3 // "bank"
app_global_get
==
b delete_18_l2
delete_18_l12:
retsub

// give_funds_back
givefundsback_19:
proto 0 0
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
bytec 5 // "asset"
app_global_get
itxn_field XferAsset
bytec 15 // "stake"
app_global_get
itxn_field AssetAmount
global CreatorAddress
itxn_field AssetReceiver
itxn_next
pushint 4 // axfer
itxn_field TypeEnum
bytec 5 // "asset"
app_global_get
itxn_field XferAsset
bytec_3 // "bank"
app_global_get
itxn_field AssetCloseTo
itxn_next
intc_1 // pay
itxn_field TypeEnum
global CreatorAddress
itxn_field CloseRemainderTo
itxn_submit
retsub

// give_funds_caller
givefundscaller_20:
proto 1 0
itxn_begin
frame_dig -1
bz givefundscaller_20_l2
pushint 4 // axfer
itxn_field TypeEnum
bytec 5 // "asset"
app_global_get
itxn_field XferAsset
bytec 15 // "stake"
app_global_get
bytec 19 // "fee_amount"
app_global_get
/
itxn_field AssetAmount
bytec 18 // "fee_holder"
app_global_get
itxn_field AssetReceiver
itxn_next
givefundscaller_20_l2:
pushint 4 // axfer
itxn_field TypeEnum
bytec 5 // "asset"
app_global_get
itxn_field XferAsset
txn Sender
itxn_field AssetCloseTo
itxn_next
intc_1 // pay
itxn_field TypeEnum
global CreatorAddress
itxn_field CloseRemainderTo
itxn_submit
retsub

// hello
hello_21:
proto 1 1
bytec 7 // ""
pushbytes 0x48656c6c6f2c20 // "Hello, "
frame_dig -1
extract 2 0
concat
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// create_caster
createcaster_22:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 1
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub create_0
retsub

// opt_in_caster
optincaster_23:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 0
frame_dig 1
callsub optin_1
retsub

// init_caster
initcaster_24:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
frame_dig 1
callsub init_2
retsub

// distribute_req_caster
distributereqcaster_25:
proto 0 0
bytec 7 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub distributereq_8
retsub

// distribute_act_caster
distributeactcaster_26:
proto 0 0
bytec 7 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub distributeact_9
retsub

// hit_req_caster
hitreqcaster_27:
proto 0 0
bytec 7 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub hitreq_10
retsub

// hit_act_caster
hitactcaster_28:
proto 0 0
bytec 7 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub hitact_11
retsub

// stand_req_caster
standreqcaster_29:
proto 0 0
bytec 7 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub standreq_12
retsub

// stand_act_caster
standactcaster_30:
proto 0 0
bytec 7 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub standact_13
retsub

// forfeit_caster
forfeitcaster_31:
proto 0 0
callsub forfeit_17
retsub

// delete_caster
deletecaster_32:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 1
txna ApplicationArgs 3
intc_0 // 0
getbyte
frame_bury 2
frame_dig 0
frame_dig 1
frame_dig 2
callsub delete_18
retsub

// hello_caster
hellocaster_33:
proto 0 0
bytec 7 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub hello_21
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
concat
log
retsub